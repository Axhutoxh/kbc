{"ast":null,"code":"import { mapActions } from 'vuex';\nimport Vue from \"vue\";\nimport VueAxios from \"vue-axios\";\nimport VueSocialauth from \"vue-social-auth\";\nimport axios from \"axios\";\nimport hello from \"hellojs\";\nVue.use(VueAxios, axios);\nVue.use(VueSocialauth, {\n  providers: {\n    facebook: {\n      clientId: \"659715154536727\",\n      redirectUri: \"http://cryptic-bayou-98994.herokuapp.com/api/user/login/facebook\"\n    },\n    google: {\n      clientId: \"851572370898-mbc7j99jvme4hvkea5326be433guiu0l.apps.googleusercontent.com\",\n      redirectUri: \"https://lvkos.csb.app\"\n    }\n  }\n});\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      admin: {\n        email: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    ...mapActions(['signIn']),\n    isValidEmail(val) {\n      const emailPattern = /^(?=[a-zA-Z0-9@._%+-]{6,254}$)[a-zA-Z0-9._%+-]{1,64}@(?:[a-zA-Z0-9-]{1,63}\\.){1,8}[a-zA-Z]{2,63}$/;\n      return emailPattern.test(val) || 'Invalid email';\n    },\n    onSubmit() {\n      const {\n        signIn,\n        admin\n      } = this;\n      signIn(admin);\n    },\n    helogin() {\n      hello(\"google\").login();\n    },\n    AuthProvider(provider) {\n      var self = this;\n      this.$auth.authenticate(provider).then(response => {\n        console.log(response);\n        self.SocialLogin(provider, response);\n      }).catch(err => {\n        console.log({\n          err: err\n        });\n      });\n    },\n    SocialLogin(provider, response) {\n      this.$http.post(\"https://cryptic-bayou-98994.herokuapp.com/api/user/login/\" + provider + '/callback', response).then(response => {\n        console.log(response.data);\n      }).catch(err => {\n        console.log({\n          err: err\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapActions","Vue","VueAxios","VueSocialauth","axios","hello","use","providers","facebook","clientId","redirectUri","google","name","data","admin","email","password","methods","isValidEmail","val","emailPattern","test","onSubmit","signIn","helogin","login","AuthProvider","provider","self","$auth","authenticate","then","response","console","log","SocialLogin","catch","err","$http","post"],"sources":["src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"row bg-grey-2\" style=\"height:100vh\">\n\n    <!--Right Block -->\n    <div class=\"col \">\n      <div class=\"column justify-center\" style=\"height:100vh\">\n        <div class=\"col-6 \">\n          <div class=\"row justify-center full-height\">\n            <div class=\"col-7 \" style=\"min-width:40vh\">\n              <div class=\"column full-height\">\n                <!----Form Header----->\n                <div class=\"col-2 \">\n                  <!-----Logo part----->\n          \n                  <!----Form Heading--->\n                  <div class=\"text-center header q-mt-md\">\n                    <div class=\" text-h4 text-bold\">\n                      Admin Login\n                    </div>\n                  </div>\n                </div>\n                <!----SignUp Form----->\n                <div class=\"col-8 q-mt-lg  \">\n                  <form\n                    @submit=\"onSubmit\"\n                    class=\"text-grey-10 q-mt-lg q-px-md\"\n                  >\n                    <div class=\"q-mt-xs\">\n                      <div class=\" text-subtitle \">Email*</div>\n                      <input\n                        outlined\n                        dense\n                        lazy-rules\n                        type=\"text\"\n                        class=\"q-mt-xs \"\n                        v-model=\"admin.email\"\n                        :rules=\"[\n                          val => !!val || 'Email is Required',\n                          isValidEmail\n                        ]\"\n                        placeholder=\"Enter your email\"\n                      />\n                    </div>\n                    <div class=\"q-mt-xs\">\n                      <div class=\" text-subtitle\">Password*</div>\n                      <input\n                        outlined\n                        dense\n                        lazy-rules\n                        type=\"password\"\n                        class=\"q-mt-xs \"\n                        v-model=\"admin.password\"\n                        :rules=\"[val => !!val || 'Password is Required']\"\n                        placeholder=\"Enter password\"\n                      />\n                    </div>\n            <div>   \n              <button @click=\"helogin()\"> g </button>\n               <button @click=\"AuthProvider('facebook')\"> Facebook</button>\n    <button @click=\"AuthProvider('google')\">Google</button></div>\n\n         \n\n\n                  </form>\n                  <!-- Forgot Password -->\n                  <!-- <div class=\"text-center q-mt-lg text-green-14 cursor-pointer\">\n                    <div>\n                      Forgot Password ?\n                    </div>\n                  </div> -->\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport Vue from \"vue\";\nimport VueAxios from \"vue-axios\";\nimport VueSocialauth from \"vue-social-auth\";\nimport axios from \"axios\";\nimport hello from \"hellojs\";\n\n\nVue.use(VueAxios, axios);\nVue.use(VueSocialauth, {\n  providers: {\n    facebook: {\n      clientId: \"659715154536727\",\n      redirectUri:\n        \"http://cryptic-bayou-98994.herokuapp.com/api/user/login/facebook\"\n    },\n    google: {\n      clientId:\n        \"851572370898-mbc7j99jvme4hvkea5326be433guiu0l.apps.googleusercontent.com\",\n      redirectUri:\n        \"https://lvkos.csb.app\"\n    }\n  }\n});\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      admin: {\n        email: '',\n        password: ''\n      }\n    }\n  },\n\n  methods: {\n    ...mapActions(['signIn']),\n    isValidEmail(val) {\n      const emailPattern = /^(?=[a-zA-Z0-9@._%+-]{6,254}$)[a-zA-Z0-9._%+-]{1,64}@(?:[a-zA-Z0-9-]{1,63}\\.){1,8}[a-zA-Z]{2,63}$/\n\n      return emailPattern.test(val) || 'Invalid email'\n    },\n    onSubmit() {\n      const { signIn, admin } = this\n      signIn(admin)\n    },\n    helogin() {\n      hello(\"google\").login()\n    },\n    AuthProvider(provider) {\n      var self = this;\n\n      this.$auth.authenticate(provider).then(response => {\n        console.log(response);\n        self.SocialLogin(provider,response)\n          }).catch(err => {\n            console.log({err:err})\n        \n      });\n    },\n\n    SocialLogin(provider, response) {\n      this.$http\n        .post(\"https://cryptic-bayou-98994.herokuapp.com/api/user/login/\" + provider+'/callback', response)\n        .then(response => {\n          console.log(response.data);\n        })\n        .catch(err => {\n          console.log({ err: err });\n        });\n    }\n  }\n}\n</script>\n<style lang=\"scss\">\n\n</style>\n"],"mappings":"AAmFA,SAAAA,UAAA;AACA,OAAAC,GAAA;AACA,OAAAC,QAAA;AACA,OAAAC,aAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AAGAJ,GAAA,CAAAK,GAAA,CAAAJ,QAAA,EAAAE,KAAA;AACAH,GAAA,CAAAK,GAAA,CAAAH,aAAA;EACAI,SAAA;IACAC,QAAA;MACAC,QAAA;MACAC,WAAA,EACA;IACA;IACAC,MAAA;MACAF,QAAA,EACA;MACAC,WAAA,EACA;IACA;EACA;AACA;AACA;EACAE,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;QACAC,KAAA;QACAC,QAAA;MACA;IACA;EACA;EAEAC,OAAA;IACA,GAAAjB,UAAA;IACAkB,aAAAC,GAAA;MACA,MAAAC,YAAA;MAEA,OAAAA,YAAA,CAAAC,IAAA,CAAAF,GAAA;IACA;IACAG,SAAA;MACA;QAAAC,MAAA;QAAAT;MAAA;MACAS,MAAA,CAAAT,KAAA;IACA;IACAU,QAAA;MACAnB,KAAA,WAAAoB,KAAA;IACA;IACAC,aAAAC,QAAA;MACA,IAAAC,IAAA;MAEA,KAAAC,KAAA,CAAAC,YAAA,CAAAH,QAAA,EAAAI,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA;QACAJ,IAAA,CAAAO,WAAA,CAAAR,QAAA,EAAAK,QAAA;MACA,GAAAI,KAAA,CAAAC,GAAA;QACAJ,OAAA,CAAAC,GAAA;UAAAG,GAAA,EAAAA;QAAA;MAEA;IACA;IAEAF,YAAAR,QAAA,EAAAK,QAAA;MACA,KAAAM,KAAA,CACAC,IAAA,+DAAAZ,QAAA,gBAAAK,QAAA,EACAD,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAnB,IAAA;MACA,GACAuB,KAAA,CAAAC,GAAA;QACAJ,OAAA,CAAAC,GAAA;UAAAG,GAAA,EAAAA;QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}